{"version":3,"sources":["webpack:///./src/styles.css","webpack:///./src/globals.js","webpack:///./src/styles.css?52f6","webpack:///./src/math.js","webpack:///./src/index.js"],"names":["module","exports","__webpack_require__","push","i","8qja","n","e","file","parse","console","log","helpers","content","hmr","transform","insertInto","locals","cube","x","d","__webpack_exports__","r","join","_math_js__WEBPACK_IMPORTED_MODULE_0__","_globals_js__WEBPACK_IMPORTED_MODULE_1__","process","element","btn","br","preElement","document","createElement","innerHTML","appendChild","onclick","then","bind","default","body","fetch","response","json","catch","error"],"mappings":"iFAAAA,EAAAC,QAA2BC,EAAQ,OAARA,MAE3BC,KAAA,CAAcH,EAAAI,EAAS,2MAAyM,MAAAC,OAAA,SAAAC,EAAAC,GCchON,EAAOO,KARI,WASXP,EAAOQ,MANE,WAAaC,QAAQC,IAAI,qBAMdC,uBChBpB,IAAAC,EAAcX,EAAQ,QAEtB,iBAAAW,MAAA,EAA4Cb,EAAAI,EAASS,EAAA,MAYxCX,EAAQ,OAARA,CAAwDW,EALrE,CAAeC,OAEfC,iBACAC,oBAIAH,EAAAI,SAAAjB,EAAAC,QAAAY,EAAAI,2CCLO,SAASC,EAAKC,GACnB,OAAOA,EAAIA,EAAIA,EAbjBjB,EAAAkB,EAAAC,EAAA,sBAAAH,uCCAAhB,EAAAoB,EAAAD,GAAA,SAAAE,GAAA,IAAAC,EAAAtB,EAAA,QAAAuB,EAAAvB,EAAA,QAAAA,EAAA,QAuBAQ,QAAQC,IAAI,gCAAiCe,cAuC7C,IAhCMC,EACAC,EACAC,EACAC,EA6BFH,GAhCEA,EAAUI,SAASC,cAAc,OACjCJ,EAAMG,SAASC,cAAc,UAC7BH,EAAKE,SAASC,cAAc,MAC5BF,EAAaC,SAASC,cAAc,OAIxCL,EAAQM,UAAYV,EAAK,CAAC,QAAS,WAAY,KAK/Cb,QAAQC,IAAI,2BAA4BH,OAAMC,SAE9CmB,EAAIK,UAAY,oCAGhBH,EAAWG,UAAY,uBAAyBf,YAAK,GAErDS,EAAQO,YAAYL,GACpBF,EAAQO,YAAYN,GACpBD,EAAQO,YAAYJ,GAGpBF,EAAIO,QAAU,SAAA5B,GAAC,OAAIL,EAAAK,EAAA,GAAA6B,KAAAlC,EAAAmC,KAAA,cAAkDD,KAAK,SAAApC,MAC1DA,EAAOsC,cAIhBX,GAITI,SAASQ,KAAKL,YAAYP,GAE1Ba,MAAM,8CACHJ,KAAK,SAAAK,GAAQ,OAAIA,EAASC,SAC1BN,KAAK,SAAAM,GACJhC,QAAQC,IAAI,mGACZD,QAAQC,IAAI+B,KAEbC,MAAM,SAAAC,GAAK,OAAIlC,QAAQkC,MAAM,iDAAkDA","file":"app.ff16ddf839086301ac0e.js","sourcesContent":["exports = module.exports = require(\"../node_modules/css-loader/dist/runtime/api.js\")(false);\n// Module\nexports.push([module.id, \"/*\\n * @Description: 入口主文件引入的 css 文件，可配合模块热替换功能\\n * @Author: Shie\\n * @Date: 2018-12-27\\n * @Last Modified by: Shie\\n * @Last Modified time: 2019-01-09 19:32:15\\n */\\n\\nbody {\\n  background: red;\\n}\\n\", \"\"]);\n\n","/*\n * @Description: 演示 shimming 全局导出变量\n * @Author: Shie\n * @Date: 2019-01-14 14:11:34\n * @Last Modified by: Shie\n * @Last Modified time: 2019-01-14 14:12:42\n */\n\nvar file = 'blah.txt';\nvar helpers = {\n  test: function () { console.log('test something'); },\n  parse: function() { console.log('parse something'); },\n};\n\n\n/*** EXPORTS FROM exports-loader ***/\nexports[\"file\"] = (file);\nexports[\"parse\"] = (helpers.parse);","\nvar content = require(\"!!../node_modules/css-loader/dist/cjs.js!./styles.css\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../node_modules/style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../node_modules/css-loader/dist/cjs.js!./styles.css\", function() {\n\t\tvar newContent = require(\"!!../node_modules/css-loader/dist/cjs.js!./styles.css\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}","/*\n * @Description: 测试 tree shaking 的工具（数学）函数\n * @Author: Shie\n * @Date: 2018-12-28\n * @Last Modified by: Shie\n * @Last Modified time: 2019-01-09 19:32:06\n */\n\nexport function square(x) {\n  return x * x;\n}\n\nexport function cube(x) {\n  return x * x * x;\n}\n","/*\n * @Description: 入口主文件\n * @Author: Shie\n * @Date: 2018-12-19\n * @Last Modified by: Shie\n * @Last Modified time: 2019-01-14 15:02:57\n */\n\n// import _ from 'lodash';\nimport printMe from './print.js';\nimport { cube } from './math.js';\nimport { file, parse } from './globals.js';\nimport './styles.css';\n// const printMe = require('./print.js');\n// const cube = require('./math.js').cube;\n// const file = require('./globals.js').file;\n// const parse = require('./globals.js').parse;\n// require('./styles.css');\n\nif (process.env.NODE_ENV !== 'production') {\n  console.log('Looks like we are in development mode!');\n}\n\nconsole.log('process.env.NODE_ENV in src: ', process.env.NODE_ENV);\n\n/**\n * 静态导入 lodash\n * @returns {Object} 返回创建的 DOM 元素对象\n */\nfunction component() {\n  var element = document.createElement('div');\n  var btn = document.createElement('button');\n  var br = document.createElement('br');\n  var preElement = document.createElement('pre');\n\n  // Lodash, now imported by this script\n  // element.innerHTML = _.join(['Hello', 'webpack'], ' ');\n  element.innerHTML = join(['Hello', 'webpack'], ' ');\n\n  // // Assume we are in the context of `window`\n  // this.alert('Hmmm, this probably isn\\'t a great idea...');\n\n  console.log('globals file and parse: ', file, parse)\n\n  btn.innerHTML = 'Click me and look at the console!';\n  // btn.onclick = printMe;\n\n  preElement.innerHTML = '5 cubed is equal to ' + cube(5);\n\n  element.appendChild(br);\n  element.appendChild(btn);\n  element.appendChild(preElement);\n\n  // import() 实现懒加载\n  btn.onclick = e => import(/* webpackChunkName: \"print\" */ './print').then(module => {\n    const print = module.default;\n    print();\n  });\n\n  return element;\n}\n\nvar element = component(); // 当 print.js 改变导致页面重新渲染时，重新获取渲染的元素\ndocument.body.appendChild(element);\n\nfetch('https://jsonplaceholder.typicode.com/users')\n  .then(response => response.json())\n  .then(json => {\n    console.log('We retrieved some data! AND we\\'re confident it will work on a variety of browser distributions.');\n    console.log(json);\n  })\n  .catch(error => console.error('Something went wrong when fetching this data: ', error));\n\n/**\n * 动态导入 lodash\n * @returns {Promise} Promise object represents the DOM element.\n */\n// function getComponent() {\n//   return import(/* webpackChunkName: \"lodash\" */ 'lodash').then(function(_) {\n//     var element = document.createElement('div');\n//     var btn = document.createElement('button');\n//     var preElement = document.createElement('pre');\n\n//     element.innerHTML = _.join(['Hello', 'webpack'], ' ');\n\n//     btn.innerHTML = 'Click me and check the console!';\n//     btn.onclick = printMe;\n\n//     preElement.innerHTML = '5 cubed is equal to ' + cube(5);\n\n//     element.appendChild(btn);\n//     element.appendChild(preElement);\n\n//     return element;\n//   }).catch(function(error) { return 'An error occurred while loading the component' });\n// }\n\n\n/**\n * 使用 async 函数简化动态导入 lodash 代码\n * @returns {Promise} Promise object represents the DOM element.\n */\n// async function getComponent() {\n//   const element = document.createElement('div');\n//   const _ = await import(/* webpackChunkName: \"lodash\" */ 'lodash');\n\n//   element.innerHTML = _.join(['Hello', 'webpack'], ' ');\n  \n//   return element;\n// }\n\n// getComponent().then(function(component) {\n//   document.body.appendChild(component);\n// })\n\nif(module.hot) {\n  module.hot.accept('./print.js', function() {\n    console.log('Accepting the updated printMe moudle!');\n    document.body.removeChild(element);\n    element = component(); // 重新渲染页面后，component 更新 click 事件处理\n    document.body.appendChild(element);\n  })\n}\n"],"sourceRoot":""}